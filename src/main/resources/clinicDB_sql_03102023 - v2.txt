/*
PostgresSQL 15
USER = "postgres"
PASSWORD = "1212"
SCRIPT = Version 2.0
DATE = 01/10/2013
*/

-- Database: clinicDB

-- DROP DATABASE IF EXISTS "clinicDB";

CREATE DATABASE "clinicDB"
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'Spanish_Colombia.1252'
    LC_CTYPE = 'Spanish_Colombia.1252'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

CREATE TABLE IF NOT EXISTS public.CLINIC
(
	CLIID 					serial, 
	CLINAME 				varchar(100) 	NOT NULL,
	CLINIT 					varchar(20) 	NOT NULL,
	CLIADDRESS				varchar(100) 	NOT NULL,
	CLIPHONE				varchar(20) 	NOT NULL,
    CONSTRAINT clinic_pkey 
    	PRIMARY KEY (CLIID)
);


CREATE TABLE IF NOT EXISTS public.DOCUMENTTYPE
(
	DTYPID 						serial, 
	DTYPDESCRIPTION				varchar(15) NOT NULL,
    CONSTRAINT documenttype_pkey 
    	PRIMARY KEY (DTYPID)
);

CREATE TABLE IF NOT EXISTS public.PERSON
(
	PERID 					serial,
	PERIDENTIFICATIONNUMBER varchar(20) NOT NULL,
	PERFIRSTNAME 			varchar(20) NOT NULL,
	PERSECONDNAME 			varchar(20) NOT NULL,
	PERFISTLASTNAME 		varchar(20) NOT NULL,
	PERSECONDLASTNAME 		varchar(20) NOT NULL,
	PERPHONENUMBER			varchar(20) NOT NULL,
	PERPERSONTYPEENUM		varchar(3) 	NOT NULL check(PERPERSONTYPEENUM in ('DOC','PAC')),
	PERDTYPID				integer 	NOT NULL,
   	CONSTRAINT person_pkey 
   		PRIMARY KEY (PERID),
	CONSTRAINT fk_personType
		FOREIGN KEY (PERDTYPID) 
	  	REFERENCES DOCUMENTTYPE(DTYPID) 
	 	ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public.AGENDA
(
	AGEID 						serial, 
	AGEPERIDDOCTOR			 	integer 	NOT NULL,
	AGEDATE 					date 		NOT NULL,
	AGEHOUR 					date 		NOT NULL,
	AGESTATUS 					boolean 	NOT NULL,
	AGEOFFID 					integer 	NOT NULL,
    CONSTRAINT agenda_pkey 
    	PRIMARY KEY (AGEID),
	CONSTRAINT fk_person
		FOREIGN KEY (AGEPERIDDOCTOR) 
		REFERENCES PERSON(PERID) 
	 	ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public.OFFICE
(
	OFFID 					serial, 
	OFFNAME					varchar(15) NOT NULL,
	OFFSTATUS				boolean,
    CONSTRAINT office_pkey 
    	PRIMARY KEY (OFFID)
);



CREATE TABLE IF NOT EXISTS public.APPOINTMENT
(
	APPID 						serial, 
	APPAGEID 					integer 	NOT NULL,
	APPPERIDPATIENT 			integer 	NOT NULL,
	
    CONSTRAINT appointment_pkey 
    	PRIMARY KEY (APPID),
	CONSTRAINT fk_appointment_age
		FOREIGN KEY (APPAGEID) 
		REFERENCES AGENDA(AGEID) 
	 	ON DELETE CASCADE,
	CONSTRAINT fk_appointment_per
		FOREIGN KEY (APPPERIDPATIENT) 
		REFERENCES PERSON(PERID) 
	 	ON DELETE CASCADE
);




